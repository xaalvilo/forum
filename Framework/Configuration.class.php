<?phpnamespace Framework;/** * Classe dont le rôle est la gestion de la configuration du site, permettant d'externaliser la configuration du site en dehors du code source* elle charge le fichier de configuration dev.ini ou prod.ini*/class Configuration{    /**    * cette classe encapsule un tableau associatif clés/valeurs (attribut $parametres) stockant les valeurs des paramètres de configuration. ce tableau est statique (un seul exemplaire par classe)    * ce qui permet de l'utiliser sans instanciere d'objet Configuration    */    private static $parametres ;    /**    * Méthode statique publique permettant de rechercher la valeur d'un paramètre à partir de son nom.    * si le paramètre en question est trouvé dans le tableau associatif, la méthode renvoie la valeur du parametre de configuration     * sinon une valeur par défaut est renvoyée    *    * @param string $nom Nom du paramètre    * @param string $valeurParDefaut Valeur à renvoyer par défaut    * @return string Valeur du paramètre    */    public static function get($nom, $valeurParDefaut = null)    {        if(isset(self::getParametres()[$nom]))        {            $valeur = self::getParametres()[$nom];        }        else         {            $valeur = $valeurParDefaut;        }        return $valeur;    }    /**    * Méthode statique privée getParametres() effectue le chargement tardif du fichier contenant les paramètres de configuration. Afin de faire figurer sur     * un même serveur une configuration de développement  et une configuration de production, 2 fichiers sont recherchés dans le répertoire Config du site : dev.ini et prod.ini.     *     * @return array $_parametres tableau associatif des parametres de configuration    * @throws Exception Si aucun fichier de configuration n'est trouvé    */    private static function getParametres()    {        //si le fichier n'a pas déjà été chargé         if (self::$parametres == null)        {            //prendre le fichier de configuration de développement            $cheminFichier = "Config/dev.ini";                       // s'il n'existe pas , prendre le fichier de configuration de production            if (!file_exists($cheminFichier))            {                $cheminFichier = "Config/prod.ini ";            }                        // si ce dernier n'existe pas non plus, envoyer une erreur             if (!file_exists($cheminFichier))            {                throw new \Exception("Aucun fichier de configuration trouvé");            }                        // sinon instancier et renvoyer un tableau associatif attribué à l'attribut $_parametres grâce à la fonction parse_ini°file() qui analyse un fichier de configuration             // et retourne la configuration sous forme de tableau associatif            else            {                self::$parametres = parse_ini_file($cheminFichier);            }        }                // si le fichier de configuration a déjà été chargé, le renvoyer        return self::$parametres;    }}                            